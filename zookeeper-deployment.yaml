apiVersion: apps/v1
kind: Deployment
metadata:
  # annotations:
  #   kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert
  #   kompose.version: 1.21.0 (992df58d8)
  # creationTimestamp: null
  labels:
    io.kompose.service: zookeeper
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: zookeeper
  strategy: {}
  template:
    metadata:
      # annotations:
      #   kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert
      #   kompose.version: 1.21.0 (992df58d8)
      # creationTimestamp: null
      labels:
        io.kompose.service: zookeeper
    spec:
      containers:
      - name: zookeeper
        image: wurstmeister/zookeeper
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: 2181
        resources: {}

      - name: kafkaa
        image: wurstmeister/kafka
        env:
        - name: KAFKA_ADVERTISED_HOST_NAME
        
          # value: 127.0.0.1
          value: 127.0.0.1
        - name: KAFKA_ADVERTISED_PORT
          value: "9092"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper:2181
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: 9092
        resources: {}
        # restartPolicy: Always
        # serviceAccountName: ""
      # volumes: null
      
status: {}
---
apiVersion: v1
kind: Service
metadata:
  # annotations:
  #   kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert
  #   kompose.version: 1.21.0 (992df58d8)
  # creationTimestamp: null
  labels:
    io.kompose.service: zookeeper
  name: zookeeper
spec:
  ports:
  - name: "2181"
    port: 2181
    targetPort: 2181
    # nodePort: 30072
  selector:
    io.kompose.service: zookeeper
  # type: LoadBalancer
  type: ClusterIP
# status:
  # loadBalancer: {}